package ch5_01;

public class Note {
	
	  //자료 구조
	
		//선형 자료 1:1  선형자료
	  // 디비의 데이터를 꺼네 오면 메모리에 있다는 이야기
	  // 메모리상의 있는데이터를 어떻게 관리해야되는지를 생각하는게 자료구조
	  // 프로그램의 수행속도와 관련있음
	  
	   
	  // 선형자료구조(배열,연결리스트,스택,큐)
	  // 앞뒤가 1:1 관계 
	  // 배열 -> 중간이 비어있으면 안됨( 논리적인 순서와 물리적인 순서가 동일해야됨) 삭제를 하면 뒤에 요소들을 떙기고 삽입을하면 뒤로 밀어야됨
	  // 어느 위치에 있는 연상이 빠름 
	  // 인덱스 연산이러 몇번째 인덱스를 찾아가는게 빠름
	  
	
	  //linkedList 
	  //노드가 필요할떄 로케이드 됨
	  //다음 속성을 자료와 다음 속성의 링크를 가지고있음 (c는 포인터)
	  //추가되고 삭제되는 연산속도가 배열보다빠름
      
	  // stack (FIFO)
	  // 자료가 삭제되고 추가되는 부분은 탑!
	  // 함수의 메모리는 수텍구조 (지역변수들은 스텍메모리에)
	  // 바둑 장기 체스  미로찾기 dfs(깊이우선 탐색)
	
	  //큐 (QIEIE)FIFO
	  //front  자료추가는 rear에서만 가능
	  //자료가 추가 되는 것 인큐 .빠지는걸 디큐
	  //
	
	
	  //비선형자료
	
	  // 트리
	  // 차수 디그리 차일드 의 갯수 2진트리를 많이 씀
	
	  // 힙 
      // 레프트 차일드 부터 차는걸 완전이진트리
	  
	  // binary seach tree
	  // 검색으 위한 트리
	  // key는 일유한 값이 들어가야됨
	  // 왼쪽은 자기보다 작은거 오른쪽은 자기보다 큰값
	  // 왼만하면 log2n 보장될수있도록 만든다 
	  // 트리나 그래프의 엘리먼트를 돌아보는것을 순회한다라고 함
	  // inorder treversla 왼 root 오  자료가 정렬되서 출력됨
	   
	
	
	
	
	
	

}
